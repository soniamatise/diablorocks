@import "color/index",
"~matise-stack/_stack.scss",
"~matise-grid/grid.scss",
"settings/settings",
"typography/index",
"layout/index",
"components/index",
"components/work";



body{
	font-family: $body-font; background-color: color(White);
	::selection{
		background: color(Gray); color: color(Light);
	}
	::-moz-selection{
		background: color(Gray); color: color(Light);
	}
	&.scroll-disable{
		// when mobile menu is active body scroll-disable
		overflow: hidden;
	}
	// menu item styling when page is Black
	&.white_menu{
		.nav{
			&__link{
				&:before{
					background-color: color(White);
				}
			}
			&__text{
				color: color(White);
			}
		}
	}
}

// overall intro section styling
section.intro{
	padding-top: grid(5);
	@media #{$small-only}{
		background-color: color(Black);
		padding: rem(96) rem(64);
		.paragraph_shower{ justify-content: normal;
			p{padding-top: 0px; }
		}
		p{ color: color(White); text-align: left; line-height: 1.5; font-size: rem(20); font-weight: $font-regular; padding-top: 0px;
			&:before{ font-weight: $font-medium; }
		}
		h1 { display: none; }
	}
}

.link{
	&--external{
		text-decoration: underline;
	}
}

@media #{$medium-up}{
	.hide-desktop{
		display: none;
	}
}
@media #{$small-only}{
	.hide-mobile, .mobile-hide{
		display: none;
	}
}

// Create Background Classes
@each $name,$value in $colors{
	$name-lowercase: to-lower-case($name);
	.bg-#{$name}, .bg-#{$name-lowercase}{
		background-color: $value; color: contra($value);
		hr{
			background-color: currentColor; color: currentColor;
		}
	}
	.text-#{$name}, .text-#{$name-lowercase}, .content .text-#{$name-lowercase}{
		color: $value !important;
	}
	$opacity: (0.9,0.8,0.75,0.7,0.6,0.5,0.4,0.3,0.25,0.2,0.1);
	@each $opacity-value in $opacity{
		$opacity-name: "0#{$opacity-value * 100}";
		.bg-#{$name}-#{$opacity-name}, .bg-#{$name-lowercase}-#{$opacity-name}{
			background-color: color($name,$opacity-value); color: $value;
		}
	}
}

@import "color/index",
"~matise-stack/_stack.scss",
"~matise-grid/grid.scss",
"settings/settings",
"typography/index",
"layout/index",
"components/index",
"components/work";



body{
	font-family: $body-font; background-color: color(White);
	::selection{
		background: color(Gray); color: color(Light);
	}
	::-moz-selection{
		background: color(Gray); color: color(Light);
	}
	&.scroll-disable{
		// when mobile menu is active body scroll-disable
		overflow: hidden;
	}
	// menu item styling when page is Black
	&.white-menu{
		.nav{
			&__text{
				color: color(White);
				&:before{
					background-color: color(White);
				}
			}
		}
	}
}

section.intro{
	padding-top: grid(5);
	@media only screen and (max-width: 1024px) and (min-width: 768px){
		padding-top: grid(7);
	}
	@media #{$small-only}{
		padding: 0;
	}
}

.link{
	&--external{
		text-decoration: underline;
	}
}

@media #{$medium-up}{
	.hide-desktop{
		display: none;
	}
}
@media #{$small-only}{
	.hide-mobile, .mobile-hide{
		display: none;
	}
}

// Create Background Classes
@each $name,$value in $colors{
	$name-lowercase: to-lower-case($name);
	.bg-#{$name}, .bg-#{$name-lowercase}{
		background-color: $value; color: contra($value);
		hr{
			background-color: currentColor; color: currentColor;
		}
	}
	.text-#{$name}, .text-#{$name-lowercase}, .content .text-#{$name-lowercase}{
		color: $value !important;
	}
	$opacity: (0.9,0.8,0.75,0.7,0.6,0.5,0.4,0.3,0.25,0.2,0.1);
	@each $opacity-value in $opacity{
		$opacity-name: "0#{$opacity-value * 100}";
		.bg-#{$name}-#{$opacity-name}, .bg-#{$name-lowercase}-#{$opacity-name}{
			background-color: color($name,$opacity-value); color: $value;
		}
	}
}
